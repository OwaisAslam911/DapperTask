 
@model IEnumerable<DapperTask.Models.EmployeeViewModel>

<div class="content-body">
    <form method="post" id="AddEmployeeForm">
        <input type="hidden" id="EmployeeId" />
        <div class="container">
            <div class="d-flex">
                <div class="cont-fluid" style="width:500px">
                    <div class="mb-3">
                        <label class="form-label">Employee Name</label>
                        <input type="text" name="EmployeeName" id="EmployeeName" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone</label>
                        <input type="text" name="Phone" id="Phone" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="text" name="Email" id="Email" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Salary</label>
                        <input type="text" name="Salary" id="Salary" class="form-control" required>
                    </div>
                </div>
                <div class="dropdown" style="width:400px">
                    <div class="mb-3">
                        <label for="OrganizationId" class="form-label">Organization</label>
                        <select class="form-control" id="OrganizationId" name="OrganizationId" required>
                            <option>Select Your Organization</option>
                            @foreach (var organization in ViewBag.Organizations)
                            {
                                <option value="@organization.OrganizationId">@organization.OrganizationName</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="DepartmentId" class="form-label">Departments</label>
                        <select class="form-control" id="DepartmentId" name="DepartmentId" required>
                            <option>Select Your Department</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="PositionId" class="form-label">Positions</label>
                        <select class="form-control" id="PositionId" name="PositionId" required>
                            <option>Select Your Position</option>
                        </select>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary" id="addbutton">Add New Employee</button>
            <button type="button" class="btn btn-secondary" id="updateButton" style="display:none;">Update</button>
        </div>
    </form>

<table  class="table">
    <thead>

        <tr>
            <th>Id </th>
            <th>Name</th>
            <th>Phone</th>
            <th>Email</th>
            <th>Organization</th>
            <th>Department</th>
            <th>Position</th>
            <th>Salary</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="emptable">

    </tbody>
</table>




</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Define the URL for the AJAX call

        fetchEmployees();

        // When Organization changes, fetch the corresponding departments
        $('#OrganizationId').change(function () {
            debugger;
            var OrganizationId = $(this).val(); // Get selected OrganizationId

            // Clear department and position dropdowns
            $('#DepartmentId').empty().append('<option value="">Select Your Department</option>');
            $('#PositionId').empty().append('<option value="">Select Your Position</option>');

            if (OrganizationId) {
                $.ajax({
                    url: '@Url.Action("GetDepartments", "Home")',
                    type: 'GET',
                    data: { organizationId: OrganizationId },  // Pass organizationId to the server
                    success: function (data) {
                        console.log(data);  // Debugging the response from the server

                        if (data.length > 0) {
                            // Add departments to the Department dropdown
                            $.each(data, function (i, department) {
                                $('#DepartmentId').append('<option value="' + department.departmentId + '">' + department.departmentName + '</option>');
                            });
                        } else {
                            $('#DepartmentId').append('<option value="">No departments found</option>');
                        }
                    },
                    error: function () {
                        alert('Error loading departments.');
                    }
                });
            }
        });

        // When Department changes, fetch the corresponding positions
        $('#DepartmentId').change(function () {

            var departmentId = $(this).val();

            var organizationId = $('#OrganizationId').val();  // Get selected OrganizationId

            $('#PositionId').empty().append('<option value="">Select Your Position</option>');

            if (departmentId && organizationId) {
                $.ajax({
                    url: '@Url.Action("GetPositions", "Home")',
                    type: 'GET',
                    data: { organizationId: organizationId, departmentId: departmentId },
                    success: function (data) {
                        $.each(data, function (i, position) {
                            $('#PositionId').append('<option value="' + position.positionId + '">' + position.positionTitle + '</option>');
                        });
                    },
                    error: function () {
                        alert('Error loading positions.');
                    }
                });
            }
        });
    });
    // Function to fetch position emps
    function fetchEmployees() {
        $.ajax({
            url:"/Home/GetEmployees",
            method: 'GET',
            success: function (data) {
                
                $('#emptable').empty();

                debugger;
                data.forEach(function (emp) {
                    $('#emptable').append(` <tr id="trtag_${emp.employeeId}">

                                                     <td>${emp.employeeId}</td>
                                                                <td data-id="${emp.employeeId}">${emp.employeeName}</td>
                                                                <td data-id="${emp.employeeId}">${emp.phone}</td>
                                                                <td data-id="${emp.employeeId}">${emp.email}</td>
                                                                <td data-id="${emp.organizationId}">${emp.organizationName}</td>
                                                                 <td data-id="${emp.departmentId}">${emp.departmentName}</td>
                                                                 <td data-id="${emp.positionId}">${emp.positionTitle}</td>
                                                                    <td id="empsallary_${emp.employeeId}" data-id="${emp.employeeId}">${emp.salary}</td>
                                                 <td>
                                                           <button  class="btn btn-primary" data-id="${emp.employeeId}" data-dep="${emp.departmentId}"
                                                            data-name="${emp.employeeName}" data-email="${emp.email}" data-phone="${emp.phone}" data-salary="${emp.salary}"
                                                            data-org="${emp.organizationId}" data-post="${emp.positionId}" id="update_btn">Edit</button>
                                                         <button class="btn btn-danger delete-btn" onclick="deleteEmployee(${emp.employeeId})">Delete</button>

                                                  </td>
                                                  </tr>

                                        `);
                }); 
            },
            error: function (error) {
                console.error("Error fetching  emps:", error);
            }
        });
    };
    $('#AddEmployeeForm').submit(function (event) {
        event.preventDefault();

        var newEmp = {
            organizationId: $('#OrganizationId').val(),
            departmentId: $('#DepartmentId').val(),
            positionId: $('#PositionId').val(),
            employeeName: $('#EmployeeName').val(),
            email: $('#Email').val(),
            phone: $('#Phone').val(),
            salary: $('#Salary').val()
        };
                
       

        $.post('@Url.Action("AddEmployee", "Home")', newEmp, function (response) {
            if (response.success) {
                $('#AddEmployeeForm')[0].reset(); // Clear form
                var actionUrl = '@Url.Action("GetEmployees", "Home")';
                fetchEmployees(actionUrl);
            } else {
                alert(response.message);
            }
        });
    });

    $(document).on("click", "#update_btn", function () {
        // Store the ID of the row being edited

        var showemp = $(this).data("id");
        var showName = $(this).data("name");
        var showemail = $(this).data("email");
        var showsalary = $(this).data("salary");
        var showphone = $(this).data("phone");
        var showorg = $(this).data("org");
        var showpost = $(this).data("post");
        var showdept = $(this).data("dep");

        $('#EmployeeId').val(showemp);
        $('#EmployeeName').val(showName);
        $('#Email').val(showemail);
        $('#Phone').val(showphone);
        $('#Salary').val(showsalary);
        $('#OrganizationId').val(showorg);
        $('#DepartmentId').val(showdept);
        $('#PositionId').val(showpost);
        $('#updateButton').show();
        $('#addbutton').hide();
        
    });
   

    $('#updateButton').click(function () {
        if (EmployeeId) {
            updateEmployee(EmployeeId);
        }
        ;
       
    });
   
    function updateEmployee(EmployeeId) {
     
        var updateEmployee = {
            EmployeeId: $("#EmployeeId").val(),
            organizationId: $('#OrganizationId').val(),
            departmentId: $('#DepartmentId').val(),
            positionId: $('#PositionId').val(),
            employeeName: $('#EmployeeName').val(),
            email: $('#Email').val(),
            phone: $('#Phone').val(),
            salary: $('#Salary').val()
        };
                
        
        

        $.post('@Url.Action("UpdateEmployee", "Home")', updateEmployee, function (response) {
            if (response.success) {
                // $("#empsallary_" + EmployeeId).text(salary);
                // alert(response.message);

                $('#AddEmployeeForm')[0].reset();
                // EmployeeId = null;
                $('#updateButton').hide(); 
                $('#addbutton').show();
                fetchEmployees('@Url.Action("GetEmployees", "Home")');
            } 
            else{
                alert(response.message);

            }
            
            // else {
            //     alert(response.message);
            // }
        });
    }





    function deleteEmployee(employeeId) {
        if (confirm('Are you sure you want to delete this employee?')) {
            $.post('@Url.Action("DeleteEmployee", "Home")', { EmployeeId: employeeId }, function (response) {
                if (response.success) {
                    // Remove the row from the table
                    $('#emptable  tr').has(`td:contains(${employeeId})`).remove();
                    var actionUrl = '@Url.Action("GetPositionMappings", "Home")';
                    fetchEmployees('@Url.Action("GetEmployee", "Home")');

                }
            });
        }
    }

    </script>

 @* @model IEnumerable<DapperTask.Models.EmployeeViewModel>

<div class="content-body">
    <form method="post" id="AddEmployeeForm">
        <input type="hidden" id="EmployeeId" />
        <div class="container">
            <div class="d-flex">
                <div class="cont-fluid" style="width:500px">
                    <div class="mb-3">
                        <label class="form-label">Employee Name</label>
                        <input type="text" name="EmployeeName" id="EmployeeName" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone</label>
                        <input type="text" name="Phone" id="Phone" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="text" name="Email" id="Email" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Salary</label>
                        <input type="text" name="Salary" id="Salary" class="form-control" required>
                    </div>
                </div>
                <div class="dropdown" style="width:400px">
                    <div class="mb-3">
                        <label for="OrganizationId" class="form-label">Organization</label>
                        <select class="form-control" id="OrganizationId" name="OrganizationId" required>
                            <option>Select Your Organization</option>
                            @foreach (var organization in ViewBag.Organizations)
                            {
                                <option value="@organization.OrganizationId">@organization.OrganizationName</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="DepartmentId" class="form-label">Departments</label>
                        <select class="form-control" id="DepartmentId" name="DepartmentId" required>
                            <option>Select Your Department</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="PositionId" class="form-label">Positions</label>
                        <select class="form-control" id="PositionId" name="PositionId" required>
                            <option>Select Your Position</option>
                        </select>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary" id="addbutton">Add New Employee</button>
            <button type="button" class="btn btn-secondary" id="updateButton" style="display:none;">Update</button>
        </div>
    </form>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Phone</th>
                <th>Email</th>
                <th>Organization</th>
                <th>Department</th>
                <th>Position</th>
                <th>Salary</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="emptable">
        </tbody>
    </table>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Fetch employees on page load
        fetchEmployees();

        // When Organization changes, fetch the corresponding departments
        $('#OrganizationId').change(function () {
            debugger;
            var OrganizationId = $(this).val(); // Get selected OrganizationId
            
            // Clear department and position dropdowns
            $('#DepartmentId').empty().append('<option value="">Select Your Department</option>');
            $('#PositionId').empty().append('<option value="">Select Your Position</option>');

            if (OrganizationId) {
                $.ajax({
                    url: '@Url.Action("GetDepartments", "Home")',
                    type: 'GET',
                    data: { organizationId: OrganizationId },  // Pass organizationId to the server
                    success: function (data) {
                        console.log(data);  // Debugging the response from the server

                        if (data.length > 0) {
                            // Add departments to the Department dropdown
                            $.each(data, function (i, department) {
                                $('#DepartmentId').append('<option value="' + department.departmentId + '">' + department.departmentName + '</option>');
                            });
                        } else {
                            $('#DepartmentId').append('<option value="">No departments found</option>');
                        }
                    },
                    error: function () {
                        alert('Error loading departments.');
                    }
                });
            }
        });
        
        // When Department changes, fetch the corresponding positions
        $('#DepartmentId').change(function () {
            
            var departmentId = $(this).val();
           
            var organizationId = $('#OrganizationId').val();  // Get selected OrganizationId

            $('#PositionId').empty().append('<option value="">Select Your Position</option>');

            if (departmentId && organizationId) {
                $.ajax({
                    url: '@Url.Action("GetPositions", "Home")',
                    type: 'GET',
                    data: { organizationId: organizationId, departmentId: departmentId },
                    success: function (data) {
                        $.each(data, function (i, position) {
                            $('#PositionId').append('<option value="' + position.positionId + '">' + position.positionTitle + '</option>');
                        });
                    },
                    error: function () {
                        alert('Error loading positions.');
                    }
                });
            }
        });
   

        // Function to fetch employees and populate the table
        function fetchEmployees() {
            $.ajax({
                url: '@Url.Action("Employees", "Home")',
                method: 'GET',
                success: function (data) {
                    $('#emptable').empty();
                    data.forEach(function (emp) {
                        $('#emptable').append(`
                            <tr id="trtag_${emp.EmployeeId}">
                                <td>${emp.EmployeeId}</td>
                                <td>${emp.EmployeeName}</td>
                                <td>${emp.Phone}</td>
                                <td>${emp.Email}</td>
                                <td>${emp.OrganizationName}</td>
                                <td>${emp.DepartmentName}</td>
                                <td>${emp.PositionTitle}</td>
                                <td>${emp.Salary}</td>
                                <td>
                                    <button class="btn btn-primary" data-id="${emp.EmployeeId}" data-name="${emp.EmployeeName}" data-email="${emp.Email}" data-phone="${emp.Phone}" data-salary="${emp.Salary}" data-org="${emp.OrganizationId}" data-department="${emp.DepartmentId}" data-position="${emp.PositionId}" id="update_btn">Edit</button>
                                    <button class="btn btn-danger" onclick="deleteEmployee(${emp.EmployeeId})">Delete</button>
                                </td>
                            </tr>
                        `);
                    });
                }
            });
        }
    });


</script> *@