@model IEnumerable<DapperTask.Models.PositionMappingViewModel>
<div class="content-body">

<div class="container" style="width:400px">
    <form id="positionMappingForm" method="post" >
        <input type="hidden" id="PostMapId" />
    <label>Select Organization</label>
            <select class="form-control" id="OrganizationId" aria-label="Default select example" asp-items="ViewBag.OrganizationMapping">
  <option selected>Select Organization</option>
</select>
<label>Select Departments</label>
            <select class="form-control" id="DepartmentId" aria-label="Default select example" asp-items="ViewBag.DepartmentMapping">
  <option selected>Select Departments</option>
</select>
<label>Select Positions</label>
            <select class="form-control" id="PositionId" aria-label="Default select example" asp-items="ViewBag.PositionMapping">
  <option selected>Select Positions</option>
</select> 

    <button type="submit" class="btn btn-primary">Add Mapping</button>
        <button type="button" class="btn btn-secondary" id="updateButton" style="display:none;">Update</button>
</form>
</div>
<hr />
<h2>Present Mappings</h2>
<table  class=" table">
     <thead>

     <tr>
         <th>Organizations</th>
         <th>Departments</th>
         <th>Position</th>
         <th>Actions</th>
     </tr>
     </thead>
    <tbody id="positionMappingTable">

        
     </tbody>
 </table>

 </div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Define the URL for the AJAX call
    

        // Call the fetch function on page load
        var actionUrl = '@Url.Action("GetPositionMappings", "Home")';
        fetchPositionMappings(actionUrl);
    });
    // Function to fetch position mappings
    function fetchPositionMappings(actionUrl) {
        $.ajax({
            url: actionUrl,
            method: 'GET',
            success: function (data) {
                // Clear existing table rows
                $('#positionMappingTable').empty();

                // Populate the table with retrieved data
                data.forEach(function (mapping) {
                    $('#positionMappingTable').append(`
                                        <tr id="trtag_${mapping.PostMapId}">

                                                   <td data-id="${mapping.OrganizationId}">${mapping.organizationName}</td>
                                                   <td data-id="${mapping.DepartmentId}">${mapping.departmentName}</td>
                                                   <td data-id="${mapping.PositionId}">${mapping.positionTitle}</td>
                                                    <td>
                                                        <button  class="btn btn-primary" data-id="${mapping.postMapId}" data-dep="${mapping.departmentId}"
                                                        data-org="${mapping.organizationId}" data-post="${mapping.positionId}" id="update_btn">Edit</button>
                                                        <button class="btn btn-danger delete-btn" onclick="deleteMapping(${mapping.postMapId})">Delete</button>
                                                    </td>
                                        </tr>

                                `);
                });
            },
            error: function (error) {
                console.error("Error fetching position mappings:", error);
            }
        });
    };

    $('#positionMappingForm').submit(function (event) {
        event.preventDefault(); // Prevent the default form submission

        var newMapping = {
            OrganizationId: $('#OrganizationId').val(),  
            DepartmentId: $('#DepartmentId').val(),
            PositionId: $('#PositionId').val()
        };



        $.post('@Url.Action("CreateMapping", "Home")', newMapping, function (response) {
            if (response.success) {
          
                $('#positionMappingForm')[0].reset(); // Clear form
                var actionUrl = '@Url.Action("GetPositionMappings", "Home")';
                fetchPositionMappings(actionUrl);
            } else {
                alert(response.message);
            }
        });
    });

    function deleteMapping(postMapId) {
        if (confirm('Are you sure you want to delete this mapping?')) {
            $.post('@Url.Action("DeleteMapping", "Home")', { PostMapId: postMapId }, function (response) {
                if (response.success) {
                    // Remove the row from the table
                    $('#positionMappingTable  tr').has(`td:contains(${postMapId})`).remove();
                    var actionUrl = '@Url.Action("GetPositionMappings", "Home")';
                    fetchPositionMappings(actionUrl);
                    
                }
            });
        }
    }




    $(document).on("click", "#update_btn", function () {
         // Store the ID of the row being edited
        
        var showmap = $(this).data("id");
        var showorg = $(this).data("org");
        var showpost = $(this).data("post");
        var showdept = $(this).data("dep");

        // Set the hidden field with the PostMapId
        $('#PostMapId').val(showmap);

        // Pre-fill dropdowns with existing values (IDs, not names)
        $('#OrganizationId').val(showorg);
        $('#DepartmentId').val(showdept);
        $('#PositionId').val(showpost);

        $('#updateButton').show(); 
    });

    $('#updateButton').click(function () {
        if (PostMapId) {
            updateMapping(PostMapId);
        }
   ;
    });
    function updateMapping(postMapId) {
        var updatedMapping = {
            PostMapId: $('#PostMapId').val(), // Get the PostMapId from the hidden field
            OrganizationId: $('#OrganizationId').val(),
            DepartmentId: $('#DepartmentId').val(),
            PositionId: $('#PositionId').val()
            
        };
          
        fetchPositionMappings('@Url.Action("GetPositionMappings", "Home")');

        $.post('@Url.Action("UpdateMapping", "Home")', updatedMapping, function (response) {
            if (response.success) {
                $('#positionMappingForm')[0].reset();
                currentEditId = null; // Reset current edit ID
                $('#updateButton').hide(); // Hide update button
                fetchPositionMappings('@Url.Action("GetPositionMappings", "Home")');
            } else {
                alert(response.message);
            }
        });
    }


</script>